{"ast":null,"code":"var _jsxFileName = \"/Users/makhortykhruslan/Desktop/tictaktoe/src/components/Field/Field.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './field.scss';\nimport Square from \"../Square/Square\";\nimport { logicWin } from './logicWin';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useScore } from \"../../Context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Field = () => {\n  _s();\n\n  const increment = useScore();\n  const [state, setState] = useState({\n    arrSquares: Array(9).fill(null),\n    count: 0,\n    winner: ''\n  });\n\n  if (state.winner === 'X') {\n    increment.incrementOne();\n  } else if (state.winner === 'O') {\n    increment.incrementTwo();\n  }\n\n  const winnerPlayer = () => {\n    const activeWord = state.count % 2 === 0 ? 'X' : 'O';\n    const result = logicWin.forEach((item, index) => {\n      const line = logicWin[index];\n\n      if (state.arrSquares[line[0]] === activeWord && state.arrSquares[line[1]] === activeWord && state.arrSquares[line[2]] === activeWord) {\n        setState({ ...state,\n          winner: activeWord\n        });\n        setTimeout(() => {\n          setState({ ...state,\n            arrSquares: Array(9).fill(null),\n            count: 0,\n            winner: ''\n          });\n        }, 1000);\n      } else if (state.count === 8) {\n        setTimeout(() => {\n          setState({ ...state,\n            arrSquares: Array(9).fill(null),\n            count: 0,\n            winner: ''\n          });\n        }, 1000);\n      }\n    });\n  };\n\n  const handelClick = event => {\n    let data = event.target.getAttribute('data');\n    let current = state.arrSquares;\n\n    if (current[data] === null) {\n      current[data] = state.count % 2 === 0 ? 'X' : 'O';\n      setState({ ...state,\n        arrSquares: current\n      });\n      setState({ ...state,\n        count: state.count + 1\n      });\n    }\n\n    winnerPlayer();\n  };\n\n  const showSquare = state.arrSquares.map((item, index) => /*#__PURE__*/_jsxDEV(Square, {\n    content: item,\n    onClick: handelClick,\n    data: index\n  }, uuidv4(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field-container\",\n    children: showSquare\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Field, \"hoT8z252RdsyDweZM0Bz/sSKKIY=\", false, function () {\n  return [useScore];\n});\n\n_c = Field;\nexport default Field;\n\nvar _c;\n\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"sources":["/Users/makhortykhruslan/Desktop/tictaktoe/src/components/Field/Field.js"],"names":["React","useState","Square","logicWin","v4","uuidv4","useScore","Field","increment","state","setState","arrSquares","Array","fill","count","winner","incrementOne","incrementTwo","winnerPlayer","activeWord","result","forEach","item","index","line","setTimeout","handelClick","event","data","target","getAttribute","current","showSquare","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,SAAQC,QAAR,QAAuB,uBAAvB;;;AAEA,MAAMC,KAAK,GAAG,MAAK;AAAA;;AACf,QAAMC,SAAS,GAAGF,QAAQ,EAA1B;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAmBT,QAAQ,CAAC;AAC9BU,IAAAA,UAAU,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADkB;AAE9BC,IAAAA,KAAK,EAAE,CAFuB;AAG9BC,IAAAA,MAAM,EAAE;AAHsB,GAAD,CAAjC;;AAKA,MAAGN,KAAK,CAACM,MAAN,KAAiB,GAApB,EAAwB;AACpBP,IAAAA,SAAS,CAACQ,YAAV;AACH,GAFD,MAEM,IAAGP,KAAK,CAACM,MAAN,KAAiB,GAApB,EAAwB;AAC1BP,IAAAA,SAAS,CAACS,YAAV;AACH;;AAED,QAAMC,YAAY,GAAG,MAAK;AACtB,UAAMC,UAAU,GAAGV,KAAK,CAACK,KAAN,GAAc,CAAd,KAAoB,CAApB,GAAwB,GAAxB,GAA8B,GAAjD;AACA,UAAMM,MAAM,GAAGjB,QAAQ,CAACkB,OAAT,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAgB;AAC5C,YAAMC,IAAI,GAAGrB,QAAQ,CAACoB,KAAD,CAArB;;AACA,UAAGd,KAAK,CAACE,UAAN,CAAiBa,IAAI,CAAC,CAAD,CAArB,MAA8BL,UAA9B,IAA4CV,KAAK,CAACE,UAAN,CAAiBa,IAAI,CAAC,CAAD,CAArB,MAA8BL,UAA1E,IAAwFV,KAAK,CAACE,UAAN,CAAiBa,IAAI,CAAC,CAAD,CAArB,MAA8BL,UAAzH,EAAoI;AAChIT,QAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWM,UAAAA,MAAM,EAAEI;AAAnB,SAAD,CAAR;AAEAM,QAAAA,UAAU,CAAC,MAAI;AACXf,UAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWE,YAAAA,UAAU,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAvB;AAA4CC,YAAAA,KAAK,EAAE,CAAnD;AAAsDC,YAAAA,MAAM,EAAE;AAA9D,WAAD,CAAR;AACH,SAFS,EAEP,IAFO,CAAV;AAIH,OAPD,MAOM,IAAGN,KAAK,CAACK,KAAN,KAAgB,CAAnB,EAAqB;AACvBW,QAAAA,UAAU,CAAC,MAAI;AACXf,UAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWE,YAAAA,UAAU,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAvB;AAA4CC,YAAAA,KAAK,EAAE,CAAnD;AAAsDC,YAAAA,MAAM,EAAE;AAA9D,WAAD,CAAR;AACH,SAFS,EAEP,IAFO,CAAV;AAGH;AACJ,KAdc,CAAf;AAeH,GAjBD;;AAmBA,QAAMW,WAAW,GAAIC,KAAD,IAAU;AAC1B,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,MAA1B,CAAX;AACA,QAAIC,OAAO,GAAGtB,KAAK,CAACE,UAApB;;AACA,QAAGoB,OAAO,CAACH,IAAD,CAAP,KAAkB,IAArB,EAA0B;AACtBG,MAAAA,OAAO,CAACH,IAAD,CAAP,GAAgBnB,KAAK,CAACK,KAAN,GAAc,CAAd,KAAoB,CAApB,GAAwB,GAAxB,GAA8B,GAA9C;AACAJ,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELE,QAAAA,UAAU,EAAEoB;AAFP,OAAD,CAAR;AAIArB,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELK,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,GAAc;AAFhB,OAAD,CAAR;AAIH;;AACDI,IAAAA,YAAY;AAEf,GAhBD;;AAiBA,QAAMc,UAAU,GAAGvB,KAAK,CAACE,UAAN,CAAiBsB,GAAjB,CAAqB,CAACX,IAAD,EAAOC,KAAP,kBACpC,QAAC,MAAD;AAAuB,IAAA,OAAO,EAAED,IAAhC;AAAsC,IAAA,OAAO,EAAEI,WAA/C;AAA4D,IAAA,IAAI,EAAEH;AAAlE,KAAalB,MAAM,EAAnB;AAAA;AAAA;AAAA;AAAA,UADe,CAAnB;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACK2B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA5DD;;GAAMzB,K;UACgBD,Q;;;KADhBC,K;AA8DN,eAAeA,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport './field.scss'\nimport Square from \"../Square/Square\";\nimport {logicWin} from './logicWin';\nimport {v4 as uuidv4} from 'uuid'\nimport {useScore} from \"../../Context/Context\";\n\nconst Field = () =>{\n    const increment = useScore();\n\n    const [state, setState] =useState({\n        arrSquares: Array(9).fill(null),\n        count: 0,\n        winner: ''\n    });\n    if(state.winner === 'X'){\n        increment.incrementOne()\n    }else if(state.winner === 'O'){\n        increment.incrementTwo()\n    }\n\n    const winnerPlayer = () =>{\n        const activeWord = state.count % 2 === 0 ? 'X' : 'O';\n        const result = logicWin.forEach((item, index) =>{\n            const line = logicWin[index];\n            if(state.arrSquares[line[0]] === activeWord && state.arrSquares[line[1]] === activeWord && state.arrSquares[line[2]] === activeWord){\n                setState({...state, winner: activeWord})\n\n                setTimeout(()=>{\n                    setState({...state, arrSquares: Array(9).fill(null), count: 0, winner: ''})\n                }, 1000);\n\n            }else if(state.count === 8){\n                setTimeout(()=>{\n                    setState({...state, arrSquares: Array(9).fill(null), count: 0, winner: ''})\n                }, 1000)\n            }\n        })\n    };\n\n    const handelClick = (event) =>{\n        let data = event.target.getAttribute('data');\n        let current = state.arrSquares;\n        if(current[data] === null){\n            current[data] = state.count % 2 === 0 ? 'X' : 'O';\n            setState({\n                ...state,\n                arrSquares: current\n            })\n            setState({\n                ...state,\n                count: state.count + 1\n            })\n        }\n        winnerPlayer()\n\n    }\n    const showSquare = state.arrSquares.map((item, index) =>\n        <Square key={uuidv4()} content={item} onClick={handelClick} data={index} />)\n\n    return(\n        <div className='field-container'>\n            {showSquare}\n            {/*<div className=''></div>*/}\n        </div>\n    )\n\n}\n\nexport default Field;"]},"metadata":{},"sourceType":"module"}