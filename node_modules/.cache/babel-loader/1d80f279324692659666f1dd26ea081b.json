{"ast":null,"code":"var _jsxFileName = \"/Users/makhortykhruslan/Desktop/tictaktoe/src/components/Field/Field.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './field.scss';\nimport Square from \"../Square/Square\";\nimport { logicWin } from './logicWin';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useScore } from \"../../Context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Field = () => {\n  _s();\n\n  const increment = useScore();\n  const [state, setState] = useState({\n    arrSquares: Array(9).fill(null),\n    count: 0,\n    isOpen: false,\n    player: null\n  });\n\n  const winnerPlayer = () => {\n    const activeWord = state.count % 2 === 0 ? 'X' : 'O';\n    const result = logicWin.forEach((item, index) => {\n      const line = logicWin[index];\n\n      if (state.arrSquares[line[0]] === activeWord && state.arrSquares[line[1]] === activeWord && state.arrSquares[line[2]] === activeWord) {\n        increment.showLine(line);\n        increment.increment(activeWord);\n        setState({ ...state,\n          player: activeWord\n        });\n        setTimeout(() => {\n          setState({ ...state,\n            arrSquares: Array(9).fill(null),\n            count: 0\n          });\n        }, 1000);\n      } else if (state.count === 8) {\n        setTimeout(() => {\n          setState({ ...state,\n            arrSquares: Array(9).fill(null),\n            count: 0,\n            isOpen: true\n          });\n        }, 1000);\n      }\n    });\n  };\n\n  const handelClick = event => {\n    let data = event.target.getAttribute('data');\n    let current = state.arrSquares;\n\n    if (current[data] === null) {\n      current[data] = state.count % 2 === 0 ? 'X' : 'O';\n      setState({ ...state,\n        arrSquares: current\n      });\n      setState({ ...state,\n        count: state.count + 1\n      });\n    }\n\n    winnerPlayer();\n  };\n\n  const showSquare = state.arrSquares.map((item, index) => /*#__PURE__*/_jsxDEV(Square, {\n    content: item,\n    onClick: handelClick,\n    data: index\n  }, uuidv4(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field-container\",\n    children: [showSquare, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.isOpen ? 'Ничья' : 'Победил '\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Field, \"pMgKHuOAouk/pbcyybGc0XHnkNQ=\", false, function () {\n  return [useScore];\n});\n\n_c = Field;\nexport default Field;\n\nvar _c;\n\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"sources":["/Users/makhortykhruslan/Desktop/tictaktoe/src/components/Field/Field.js"],"names":["React","useState","Square","logicWin","v4","uuidv4","useScore","Field","increment","state","setState","arrSquares","Array","fill","count","isOpen","player","winnerPlayer","activeWord","result","forEach","item","index","line","showLine","setTimeout","handelClick","event","data","target","getAttribute","current","showSquare","map"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './field.scss'\nimport Square from \"../Square/Square\";\nimport {logicWin} from './logicWin';\nimport {v4 as uuidv4} from 'uuid'\nimport {useScore} from \"../../Context/Context\";\n\nconst Field = () =>{\n    const increment = useScore();\n\n    const [state, setState] =useState({\n        arrSquares: Array(9).fill(null),\n        count: 0,\n        isOpen: false,\n        player: null\n    });\n\n\n    const winnerPlayer = () =>{\n        const activeWord = state.count % 2 === 0 ? 'X' : 'O';\n        const result = logicWin.forEach((item, index) =>{\n            const line = logicWin[index];\n            if(state.arrSquares[line[0]] === activeWord && state.arrSquares[line[1]] === activeWord && state.arrSquares[line[2]] === activeWord){\n                increment.showLine(line)\n                increment.increment(activeWord)\n                setState({...state, player: activeWord})\n                setTimeout(()=>{\n                    setState({...state, arrSquares: Array(9).fill(null), count: 0,})\n                }, 1000);\n\n            }else if(state.count === 8){\n\n                setTimeout(()=>{\n\n                    setState({...state, arrSquares: Array(9).fill(null), count: 0, isOpen: true})\n                }, 1000)\n            }\n        })\n    };\n\n    const handelClick = (event) =>{\n        let data = event.target.getAttribute('data');\n        let current = state.arrSquares;\n        if(current[data] === null){\n            current[data] = state.count % 2 === 0 ? 'X' : 'O';\n            setState({\n                ...state,\n                arrSquares: current\n            })\n            setState({\n                ...state,\n                count: state.count + 1\n            })\n        }\n        winnerPlayer()\n\n    }\n\n    const showSquare = state.arrSquares.map((item, index) =>\n        <Square key={uuidv4()} content={item} onClick={handelClick} data={index} />)\n\n    return(\n        <div className='field-container'>\n            {showSquare}\n            <div className=''></div>\n            <div>{state.isOpen ? 'Ничья' : 'Победил '}</div>\n        </div>\n    )\n\n}\n\nexport default Field;"]},"metadata":{},"sourceType":"module"}