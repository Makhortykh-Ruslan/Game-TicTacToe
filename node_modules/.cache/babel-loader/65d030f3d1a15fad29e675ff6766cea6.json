{"ast":null,"code":"var _jsxFileName = \"/Users/makhortykhruslan/Desktop/tictaktoe/src/Context/Context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreContext = /*#__PURE__*/React.createContext();\nexport const useScore = () => {\n  _s();\n\n  return useContext(ScoreContext);\n};\n\n_s(useScore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst GameContext = ({\n  children\n}) => {\n  _s2();\n\n  const [state, setState] = useState({\n    playerOne: 0,\n    playerTwo: 0,\n    nameOne: '',\n    nameTwo: ''\n  });\n  useEffect(() => {\n    const nameOne = prompt('Имя первого игрока ?');\n    const nameTwo = prompt('Имя второго игрока ?');\n    setState({ ...state,\n      nameOne: nameOne,\n      nameTwo: nameTwo\n    });\n  }, []);\n\n  const increment = activeWord => {\n    if (activeWord === 'X') {\n      setState({ ...state,\n        playerOne: state.playerOne + 1\n      });\n    }\n\n    if (activeWord === 'O') {\n      setState({ ...state,\n        playerTwo: state.playerTwo + 1\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ScoreContext.Provider, {\n    value: {\n      visible: state,\n      increment,\n      playerName: state.name\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(GameContext, \"gRXZfOB17SKK44A3vxCDP3ADKA8=\");\n\n_c = GameContext;\nexport default GameContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameContext\");","map":{"version":3,"sources":["/Users/makhortykhruslan/Desktop/tictaktoe/src/Context/Context.js"],"names":["React","useState","useContext","useEffect","ScoreContext","createContext","useScore","GameContext","children","state","setState","playerOne","playerTwo","nameOne","nameTwo","prompt","increment","activeWord","visible","playerName","name"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;;AAEA,MAAMC,YAAY,gBAAGJ,KAAK,CAACK,aAAN,EAArB;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AACzB,SAAOJ,UAAU,CAACE,YAAD,CAAjB;AACH,CAFM;;GAAME,Q;;AAIb,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AAC/BU,IAAAA,SAAS,EAAE,CADoB;AAE/BC,IAAAA,SAAS,EAAE,CAFoB;AAG/BC,IAAAA,OAAO,EAAE,EAHsB;AAI/BC,IAAAA,OAAO,EAAE;AAJsB,GAAD,CAAlC;AAOAX,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMU,OAAO,GAAGE,MAAM,CAAC,sBAAD,CAAtB;AACA,UAAMD,OAAO,GAAGC,MAAM,CAAC,sBAAD,CAAtB;AACAL,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AACKI,MAAAA,OAAO,EAAEA,OADd;AACuBC,MAAAA,OAAO,EAAEA;AADhC,KAAD,CAAR;AAIH,GAPQ,EAON,EAPM,CAAT;;AASA,QAAME,SAAS,GAAIC,UAAD,IAAe;AAC7B,QAAGA,UAAU,KAAK,GAAlB,EAAsB;AAClBP,MAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWE,QAAAA,SAAS,EAAEF,KAAK,CAACE,SAAN,GAAkB;AAAxC,OAAD,CAAR;AACH;;AACD,QAAGM,UAAU,KAAK,GAAlB,EAAsB;AAClBP,MAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,GAAkB;AAAxC,OAAD,CAAR;AACH;AACJ,GAPD;;AASA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAC1BM,MAAAA,OAAO,EAAET,KADiB;AAE1BO,MAAAA,SAF0B;AAG1BG,MAAAA,UAAU,EAAEV,KAAK,CAACW;AAHQ,KAA9B;AAAA,cAMKZ;AANL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CArCD;;IAAMD,W;;KAAAA,W;AAsCN,eAAeA,WAAf","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\n\nconst ScoreContext = React.createContext();\nexport const useScore = () =>{\n    return useContext(ScoreContext)\n}\n\nconst GameContext = ({children}) =>{\n    const [state, setState] = useState({\n        playerOne: 0,\n        playerTwo: 0,\n        nameOne: '',\n        nameTwo: '',\n\n    });\n    useEffect(()=>{\n        const nameOne = prompt('Имя первого игрока ?')\n        const nameTwo = prompt('Имя второго игрока ?')\n        setState({\n            ...state, nameOne: nameOne, nameTwo: nameTwo\n        })\n\n    }, [])\n\n    const increment = (activeWord) =>{\n        if(activeWord === 'X'){\n            setState({...state, playerOne: state.playerOne + 1})\n        }\n        if(activeWord === 'O'){\n            setState({...state, playerTwo: state.playerTwo + 1})\n        }\n    }\n\n    return(\n        <ScoreContext.Provider value={{\n            visible: state,\n            increment,\n            playerName: state.name,\n\n        }} >\n            {children}\n        </ScoreContext.Provider>\n    )\n\n}\nexport default GameContext;\n\n"]},"metadata":{},"sourceType":"module"}